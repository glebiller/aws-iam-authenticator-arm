---
name: release
on:
  workflow_dispatch:
  push:
    branches: [ main ]
env:
  REGISTRY: ghcr.io
  PROJECT: kubernetes-sigs/aws-iam-authenticator
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - id: get-latest-versions
        name: Get latest versions
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/${{ env.PROJECT }}/releases/latest | grep tag_name | cut -d '"' -f 4)
          echo "::set-output name=${PROJECT/\//_}::$LATEST_VERSION"
          echo "::set-output name=version-exists::$(curl -s -I -o /dev/null -w "%{http_code}" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' https://ghcr.io/v2/${{ github.repository }}/manifests/$LATEST_VERSION)"
      - name: Check out aws-iam-authenticator
        run: git -c advice.detachedHead=false clone --depth 1 --branch ${{ steps.get-latest-versions.outputs.kubernetes-sigs_aws-iam-authenticator }}  https://github.com/${PROJECT}.git
      - name: Install QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: metadata
        name: Extract metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.get-latest-versions.outputs.kubernetes-sigs_aws-iam-authenticator }}
      - name: Build and push
        if: ${{ steps.get-latest-versions.outputs.version-exists != '200' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
